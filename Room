import androidx.room.Dao
import androidx.room.Delete
import androidx.room.Insert
import androidx.room.OnConflictStrategy
import androidx.room.Query
import androidx.room.Update
import kotlinx.coroutines.flow.Flow

@Dao
interface ItemDao {
    @Insert(onConflict = OnConflictStrategy.IGNORE)

/* Fungsi ini digunakan untuk menyisipkan atau menambahkan data baru ke dalam database. Metode insert(item: Item) ini menerima objek Item sebagai parameter, dan data tersebut akan dimasukkan ke dalam tabel database. OnConflictStrategy.IGNORE berarti jika terdapat konflik, misalnya data yang disisipkan sudah ada dengan primary key yang sama, maka operasi insert akan diabaikan tanpa menyebabkan error atau penimpaan data. */

    suspend fun insert(item: Item)

    @Update
    suspend fun update(item: Item)

/* Fungsi ini digunakan untuk memperbarui data yang sudah ada dalam database. Metode update(item: Item) ini juga menerima objek Item sebagai parameter, dan data di dalam database akan diperbarui dengan nilai yang baru dari item berdasarkan primary key atau id yang sesuai di dalam tabel. Jika item yang diberikan tidak ditemukan, maka tidak ada perubahan yang dilakukan pada tabel. */

    @Delete
    suspend fun delete(item: Item)

/* Fungsi ini berfungsi untuk menghapus data dari database. Metode delete(item: Item) menerima objek Item sebagai parameter, dan data yang sesuai dengan primary key dari item akan dihapus dari tabel. Jika item yang dimaksud tidak ditemukan dalam tabel, maka tidak ada operasi penghapusan yang dilakukan. */

Jelaskan setiap fungsi room pada kode di atas!

    @Query("SELECT * from items WHERE id = :id")
    fun getItem(id: Int): Flow<Item>

/* Fungsi ini mengambil satu Item berdasarkan id yang diberikan sebagai parameter. Fungsi ini juga mengembalikan data dalam bentuk Flow<Item>, yang memungkinkan pengambilan data secara asynchronous dan reactive. Flow akan mengirimkan pembaruan data secara otomatis setiap kali ada perubahan pada tabel items.

    @Query("SELECT * from items ORDER BY name ASC")
    fun getAllItems(): Flow<List<Item>>
}

/* Fungsi ini mengambil semua Item yang ada di tabel items dan akan mengurutkan item berdasarkan kolom name dalam urutan ascending (ASC).
